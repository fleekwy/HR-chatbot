import requests
import os
from dotenv import load_dotenv

load_dotenv()

api_key = os.getenv("API_KEY_DIFY")


def ask_dify(question: str) -> str:
    url = "https://api.dify.ai/v1"  # –∏–ª–∏ –¥—Ä—É–≥–æ–π endpoint (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Ä—Å–∏–∏)

    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }

    data = {
        "inputs": {"question": question},
        "response_mode": "blocking"
    }

    response = requests.post(url, json=data, headers=headers)
    print(response.json())
    return response.json()["answer"]


import os
from dotenv import load_dotenv
import requests

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

def test_api_key(api_key):
    url = "https://api.dify.ai/v1//workflows/run"
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    data = {
        "inputs": {"question": "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Dify API?"},
        "response_mode": "blocking",
        "user": "1315154517"  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ!
    }

    try:
        response = requests.post(url, json=data, headers=headers)
        if response.status_code == 200:
            print("‚úÖ –£—Å–ø–µ—Ö! –û—Ç–≤–µ—Ç Dify:", response.json())
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}:", response.text)
    except Exception as e:
        print(f"üö´ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á
if api_key:
    test_api_key(api_key)
else:
    print("‚ùå API_KEY_DIFY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")

